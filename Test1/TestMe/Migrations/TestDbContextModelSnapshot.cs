// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestMe.Core.Context;

#nullable disable

namespace TestMe.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestMe.Core.Models.Unit", b =>
                {
                    b.Property<int>("UnitNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitNo"));

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UnitNo");

                    b.ToTable("UnitDetails");
                });

            modelBuilder.Entity("TestMe.Core.Models.invoiceDetail", b =>
                {
                    b.Property<int>("LineNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineNo"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("UnitNo")
                        .HasColumnType("int");

                    b.Property<int>("UnitNo1")
                        .HasColumnType("int");

                    b.Property<int>("UnitNo2")
                        .HasColumnType("int");

                    b.Property<DateTime>("expiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("LineNo");

                    b.HasIndex("UnitNo");

                    b.HasIndex("UnitNo1");

                    b.ToTable("InvoiceDetails");
                });

            modelBuilder.Entity("TestMe.Core.Models.invoiceDetail", b =>
                {
                    b.HasOne("TestMe.Core.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestMe.Core.Models.Unit", null)
                        .WithMany("Invoices")
                        .HasForeignKey("UnitNo1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("TestMe.Core.Models.Unit", b =>
                {
                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
